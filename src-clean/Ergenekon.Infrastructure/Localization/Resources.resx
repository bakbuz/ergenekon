<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConcurrencyFailure" xml:space="preserve">
    <value>İyimser eşzamanlılık hatası, nesne değiştirildi.</value>
    <comment>Error when optimistic concurrency fails</comment>
  </data>
  <data name="DefaultError" xml:space="preserve">
    <value>Bilinmeyen bir sorun oluştu.</value>
    <comment>Default identity result error message</comment>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>E-posta '{0}' zaten alınmış.</value>
    <comment>Error for duplicate emails</comment>
  </data>
  <data name="DuplicateRoleName" xml:space="preserve">
    <value>Rol adı '{0}' zaten alınmış.</value>
    <comment>Error for duplicate roles</comment>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>Kullanıcı adı '{0}' zaten alınmış.</value>
    <comment>Error for duplicate user names</comment>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>E-posta '{0}' geçersiz.</value>
    <comment>Invalid email</comment>
  </data>
  <data name="InvalidManagerType" xml:space="preserve">
    <value>{0} türü {1}&lt;{2}&gt;'den türetilmelidir.</value>
    <comment>Error when the manager type is not derived correctly</comment>
  </data>
  <data name="InvalidPasswordHasherCompatibilityMode" xml:space="preserve">
    <value>Sağlanan PasswordHasherCompatibilityMode geçersiz.</value>
    <comment>Error when the password hasher doesn't understand the format it's being asked to produce.</comment>
  </data>
  <data name="InvalidPasswordHasherIterationCount" xml:space="preserve">
    <value>Yineleme sayısı pozitif bir tamsayı olmalıdır.</value>
    <comment>Error when the iteration count is &lt; 1.</comment>
  </data>
  <data name="InvalidRoleName" xml:space="preserve">
    <value>Rol adı '{0}' geçersiz.</value>
    <comment>Error for invalid role names</comment>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Geçersiz belirteç (token).</value>
    <comment>Error when a token is not recognized</comment>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>Kullanıcı adı '{0}' geçersizdir, yalnızca harf ya da rakam içerebilir.</value>
    <comment>User names can only contain letters or digits</comment>
  </data>
  <data name="LoginAlreadyAssociated" xml:space="preserve">
    <value>Bu hesaba bağlanmış bir kullanıcı zaten var.</value>
    <comment>Error when a login already linked</comment>
  </data>
  <data name="MustCallAddIdentity" xml:space="preserve">
    <value>AddIdentity hizmet koleksiyonu üzerinde çağrılmalıdır.</value>
    <comment>Error when AddIdentity is not called</comment>
  </data>
  <data name="NoPersonalDataProtector" xml:space="preserve">
    <value>IPersonalDataProtector hizmeti kaydedilmedi, ProtectPersonalData = true olduğunda bu gereklidir.</value>
    <comment>Error when there is no IPersonalDataProtector</comment>
  </data>
  <data name="NoRoleType" xml:space="preserve">
    <value>Rol türü belirtilmedi, AddRoles&lt;TRole&gt;() işlevini deneyin.</value>
    <comment>Error when the IdentityBuilder.RoleType was not specified</comment>
  </data>
  <data name="NoTokenProvider" xml:space="preserve">
    <value>'{1}' adında bir IUserTwoFactorTokenProvider&lt;{0}&gt; kayıtlı değil.</value>
    <comment>Error when there is no IUserTwoFactorTokenProvider</comment>
  </data>
  <data name="NullSecurityStamp" xml:space="preserve">
    <value>Kullanıcı güvenlik damgası boş olamaz.</value>
    <comment>Error when a user's security stamp is null.</comment>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>Yanlış parola.</value>
    <comment>Error when a password doesn't match</comment>
  </data>
  <data name="PasswordRequiresDigit" xml:space="preserve">
    <value>Parola en az bir rakam ('0'-'9') içermelidir.</value>
    <comment>Error when passwords do not have a digit</comment>
  </data>
  <data name="PasswordRequiresLower" xml:space="preserve">
    <value>Parola en az bir küçük harf ('a'-'z') içermelidir.</value>
    <comment>Error when passwords do not have a lowercase letter</comment>
  </data>
  <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>Parola en az bir sembol içermelidir. ('!', '+' vb)</value>
    <comment>Error when password does not have enough non alphanumeric characters</comment>
  </data>
  <data name="PasswordRequiresUniqueChars" xml:space="preserve">
    <value>Parola en az {0} farklı karakter içermelidir.</value>
    <comment>Error message for passwords that are based on similar characters</comment>
  </data>
  <data name="PasswordRequiresUpper" xml:space="preserve">
    <value>Parola en az bir büyük harf ('A'-'Z') içermelidir.</value>
    <comment>Error when passwords do not have an uppercase letter</comment>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>Parola uzunluğu en az {0} karakter olmalıdır.</value>
    <comment>Error message for passwords that are too short</comment>
  </data>
  <data name="RecoveryCodeRedemptionFailed" xml:space="preserve">
    <value>Kurtarma kodu kullanımı başarısız oldu.</value>
    <comment>Error when a recovery code is not redeemed.</comment>
  </data>
  <data name="RoleNotFound" xml:space="preserve">
    <value>{0} rolü mevcut değil.</value>
    <comment>Error when a role does not exist</comment>
  </data>
  <data name="StoreNotIProtectedUserStore" xml:space="preserve">
    <value>Store, ProtectPersonalData = true olduğunda gerekli olan IProtectedUserStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIQueryableRoleStore" xml:space="preserve">
    <value>Store, IQueryableRoleStore&lt;TRole&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIQueryableUserStore" xml:space="preserve">
    <value>Store, IQueryableUserStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIRoleClaimStore" xml:space="preserve">
    <value>Store, IRoleClaimStore&lt;TRole&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserAuthenticationTokenStore" xml:space="preserve">
    <value>Store, IUserAuthenticationTokenStore&lt;User&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserAuthenticatorKeyStore" xml:space="preserve">
    <value>Store, IUserAuthenticatorKeyStore&lt;User&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserClaimStore" xml:space="preserve">
    <value>Store, IUserClaimStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserConfirmationStore" xml:space="preserve">
    <value>Store, IUserConfirmationStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserEmailStore" xml:space="preserve">
    <value>Store, IUserEmailStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserLockoutStore" xml:space="preserve">
    <value>Store, IUserLockoutStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserLoginStore" xml:space="preserve">
    <value>Store, IUserLoginStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserPasswordStore" xml:space="preserve">
    <value>Store, IUserPasswordStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserPhoneNumberStore" xml:space="preserve">
    <value>Store, IUserPhoneNumberStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserRoleStore" xml:space="preserve">
    <value>Store, IUserRoleStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserSecurityStampStore" xml:space="preserve">
    <value>Store, IUserSecurityStampStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserTwoFactorRecoveryCodeStore" xml:space="preserve">
    <value>Store, IUserTwoFactorRecoveryCodeStore&lt;User&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="StoreNotIUserTwoFactorStore" xml:space="preserve">
    <value>Store, IUserTwoFactorStore&lt;TUser&gt; öğesini uygulamıyor.</value>
    <comment>Error when the store does not implement this interface</comment>
  </data>
  <data name="UserAlreadyHasPassword" xml:space="preserve">
    <value>Kullanıcının zaten belirlenmiş bir parolası var.</value>
    <comment>Error when AddPasswordAsync called when a user already has a password</comment>
  </data>
  <data name="UserAlreadyInRole" xml:space="preserve">
    <value>Kullanıcı zaten '{0}' rolündedir.</value>
    <comment>Error when a user is already in a role</comment>
  </data>
  <data name="UserLockedOut" xml:space="preserve">
    <value>Kullanıcı hesabı kilitlendi.</value>
    <comment>Error when a user is locked out</comment>
  </data>
  <data name="UserLockoutNotEnabled" xml:space="preserve">
    <value>Bu kullanıcı için kilitleme etkin değil.</value>
    <comment>Error when lockout is not enabled</comment>
  </data>
  <data name="UserNameNotFound" xml:space="preserve">
    <value>Kullanıcı {0} mevcut değil.</value>
    <comment>Error when a user does not exist</comment>
  </data>
  <data name="UserNotInRole" xml:space="preserve">
    <value>Kullanıcı '{0}' rolünde değil.</value>
    <comment>Error when a user is not in the role</comment>
  </data>
</root>